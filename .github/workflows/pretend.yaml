---
name: pretend to release something
on:
  workflow_call:
    inputs:
      RELEASE:
        description: 'Do we want to push?'
        default: false
        required: false
        type: boolean
  workflow_dispatch:
    inputs:
      RELEASE:
        description: 'Do we want to push?'
        default: false
        required: false
        type: boolean

permissions:
  id-token: "write"
  contents: "write"
  packages: "write"
  pull-requests: "read"

concurrency: production

jobs:
  get_latest_release:
    runs-on: ubuntu-latest
    environment: testing
    steps:
    - name: curl the release tags
      id: get_latest_tag
      run: |
        curl -o releases.json -vL \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases"

        RELEASE_TAG=$(cat releases.json |jq -r '.[0].tag_name')

        echo "current_tag=${RELEASE_TAG}" >> "${GITHUB_OUTPUT}"

    - name: Get result of previous curl
      run: echo "${{ steps.get_latest_tag.outputs.current_tag }}"

    - name: Simple Semver bump
      id: next_tag
      uses: matt-FFFFFF/simple-semver@v0.1.1
      with:
        semver-input: ${{ steps.get_latest_tag.outputs.current_tag }}
        increment: p

    - uses: ncipollo/release-action@v1
      if: github.ref == 'refs/heads/main' && inputs.release
      with:
        artifacts: "*.txt"
        tag: ${{ steps.next_tag.outputs.semver }}
        generateReleaseNotes: true

    - name: Split branch for QA release release name
      if: github.ref != 'refs/heads/main' && inputs.release
      env:
        BRANCH: ${{ github.ref_name }}
      id: getname
      run: echo "::set-output name=fragment::${BRANCH##*/}"

    - uses: ncipollo/release-action@v1
      if: github.ref != 'refs/heads/main' && inputs.release
      with:
        artifacts: "*.txt"
        prerelease: true
        tag: ${{ steps.next_tag.outputs.semver }}
        name: "QA build ${{ steps.next_tag.outputs.semver }} for ${{ steps.getname.outputs.fragment }}"
        generateReleaseNotes: true

    - name: push to something
      run:
        set -e
        set -u
        set -x
        echo "push rpm to local"
        if [ "${{ github.ref }}x" == "refs/heads/mainx"  ]
        then
          echo "push rpm to staging"
        else
          echo "push rpm to qa"
        fi
